// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    uint64_t capacity;
    uint64_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H
#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t, int8_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK
typedef void (*UniffiForeignFutureDroppedCallback)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_CLONE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_CLONE
typedef uint64_t (*UniffiCallbackInterfaceClone)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK_STRUCT
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK_STRUCT
typedef struct UniffiForeignFutureDroppedCallbackStruct {
    uint64_t handle;
    UniffiForeignFutureDroppedCallback _Nonnull free;
} UniffiForeignFutureDroppedCallbackStruct;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U8
typedef struct UniffiForeignFutureResultU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t, UniffiForeignFutureResultU8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I8
typedef struct UniffiForeignFutureResultI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t, UniffiForeignFutureResultI8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U16
typedef struct UniffiForeignFutureResultU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t, UniffiForeignFutureResultU16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I16
typedef struct UniffiForeignFutureResultI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t, UniffiForeignFutureResultI16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U32
typedef struct UniffiForeignFutureResultU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t, UniffiForeignFutureResultU32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I32
typedef struct UniffiForeignFutureResultI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t, UniffiForeignFutureResultI32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U64
typedef struct UniffiForeignFutureResultU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t, UniffiForeignFutureResultU64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I64
typedef struct UniffiForeignFutureResultI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t, UniffiForeignFutureResultI64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F32
typedef struct UniffiForeignFutureResultF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t, UniffiForeignFutureResultF32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F64
typedef struct UniffiForeignFutureResultF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t, UniffiForeignFutureResultF64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_RUST_BUFFER
typedef struct UniffiForeignFutureResultRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t, UniffiForeignFutureResultRustBuffer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_VOID
typedef struct UniffiForeignFutureResultVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureResultVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t, UniffiForeignFutureResultVoid
    );

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_CURVE25519PUBLICKEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_CURVE25519PUBLICKEY
uint64_t uniffi_vodozemac_bindings_fn_clone_curve25519publickey(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_CURVE25519PUBLICKEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_CURVE25519PUBLICKEY
void uniffi_vodozemac_bindings_fn_free_curve25519publickey(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_BASE64
uint64_t uniffi_vodozemac_bindings_fn_constructor_curve25519publickey_from_base64(RustBuffer input, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_BYTES
uint64_t uniffi_vodozemac_bindings_fn_constructor_curve25519publickey_from_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_SLICE
uint64_t uniffi_vodozemac_bindings_fn_constructor_curve25519publickey_from_slice(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519PUBLICKEY_AS_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519PUBLICKEY_AS_BYTES
RustBuffer uniffi_vodozemac_bindings_fn_method_curve25519publickey_as_bytes(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519PUBLICKEY_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519PUBLICKEY_TO_BASE64
RustBuffer uniffi_vodozemac_bindings_fn_method_curve25519publickey_to_base64(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519PUBLICKEY_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519PUBLICKEY_TO_BYTES
RustBuffer uniffi_vodozemac_bindings_fn_method_curve25519publickey_to_bytes(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519PUBLICKEY_TO_VEC
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519PUBLICKEY_TO_VEC
RustBuffer uniffi_vodozemac_bindings_fn_method_curve25519publickey_to_vec(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_CURVE25519SECRETKEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_CURVE25519SECRETKEY
uint64_t uniffi_vodozemac_bindings_fn_clone_curve25519secretkey(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_CURVE25519SECRETKEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_CURVE25519SECRETKEY
void uniffi_vodozemac_bindings_fn_free_curve25519secretkey(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519SECRETKEY_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519SECRETKEY_FROM_SLICE
uint64_t uniffi_vodozemac_bindings_fn_constructor_curve25519secretkey_from_slice(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519SECRETKEY_NEW
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_CURVE25519SECRETKEY_NEW
uint64_t uniffi_vodozemac_bindings_fn_constructor_curve25519secretkey_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519SECRETKEY_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519SECRETKEY_PUBLIC_KEY
uint64_t uniffi_vodozemac_bindings_fn_method_curve25519secretkey_public_key(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519SECRETKEY_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_CURVE25519SECRETKEY_TO_BYTES
RustBuffer uniffi_vodozemac_bindings_fn_method_curve25519secretkey_to_bytes(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_ED25519KEYPAIR
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_ED25519KEYPAIR
uint64_t uniffi_vodozemac_bindings_fn_clone_ed25519keypair(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_ED25519KEYPAIR
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_ED25519KEYPAIR
void uniffi_vodozemac_bindings_fn_free_ed25519keypair(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519KEYPAIR_NEW
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519KEYPAIR_NEW
uint64_t uniffi_vodozemac_bindings_fn_constructor_ed25519keypair_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519KEYPAIR_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519KEYPAIR_PUBLIC_KEY
uint64_t uniffi_vodozemac_bindings_fn_method_ed25519keypair_public_key(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519KEYPAIR_SIGN
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519KEYPAIR_SIGN
uint64_t uniffi_vodozemac_bindings_fn_method_ed25519keypair_sign(uint64_t ptr, RustBuffer message, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_ED25519PUBLICKEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_ED25519PUBLICKEY
uint64_t uniffi_vodozemac_bindings_fn_clone_ed25519publickey(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_ED25519PUBLICKEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_ED25519PUBLICKEY
void uniffi_vodozemac_bindings_fn_free_ed25519publickey(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519PUBLICKEY_FROM_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519PUBLICKEY_FROM_BASE64
uint64_t uniffi_vodozemac_bindings_fn_constructor_ed25519publickey_from_base64(RustBuffer input, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519PUBLICKEY_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519PUBLICKEY_FROM_SLICE
uint64_t uniffi_vodozemac_bindings_fn_constructor_ed25519publickey_from_slice(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519PUBLICKEY_AS_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519PUBLICKEY_AS_BYTES
RustBuffer uniffi_vodozemac_bindings_fn_method_ed25519publickey_as_bytes(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519PUBLICKEY_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519PUBLICKEY_TO_BASE64
RustBuffer uniffi_vodozemac_bindings_fn_method_ed25519publickey_to_base64(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519PUBLICKEY_VERIFY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519PUBLICKEY_VERIFY
void uniffi_vodozemac_bindings_fn_method_ed25519publickey_verify(uint64_t ptr, RustBuffer message, uint64_t signature, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_ED25519SECRETKEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_ED25519SECRETKEY
uint64_t uniffi_vodozemac_bindings_fn_clone_ed25519secretkey(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_ED25519SECRETKEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_ED25519SECRETKEY
void uniffi_vodozemac_bindings_fn_free_ed25519secretkey(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SECRETKEY_FROM_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SECRETKEY_FROM_BASE64
uint64_t uniffi_vodozemac_bindings_fn_constructor_ed25519secretkey_from_base64(RustBuffer input, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SECRETKEY_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SECRETKEY_FROM_SLICE
uint64_t uniffi_vodozemac_bindings_fn_constructor_ed25519secretkey_from_slice(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SECRETKEY_NEW
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SECRETKEY_NEW
uint64_t uniffi_vodozemac_bindings_fn_constructor_ed25519secretkey_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SECRETKEY_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SECRETKEY_PUBLIC_KEY
uint64_t uniffi_vodozemac_bindings_fn_method_ed25519secretkey_public_key(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SECRETKEY_SIGN
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SECRETKEY_SIGN
uint64_t uniffi_vodozemac_bindings_fn_method_ed25519secretkey_sign(uint64_t ptr, RustBuffer message, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SECRETKEY_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SECRETKEY_TO_BASE64
RustBuffer uniffi_vodozemac_bindings_fn_method_ed25519secretkey_to_base64(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SECRETKEY_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SECRETKEY_TO_BYTES
RustBuffer uniffi_vodozemac_bindings_fn_method_ed25519secretkey_to_bytes(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_ED25519SIGNATURE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_ED25519SIGNATURE
uint64_t uniffi_vodozemac_bindings_fn_clone_ed25519signature(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_ED25519SIGNATURE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_ED25519SIGNATURE
void uniffi_vodozemac_bindings_fn_free_ed25519signature(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SIGNATURE_FROM_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SIGNATURE_FROM_BASE64
uint64_t uniffi_vodozemac_bindings_fn_constructor_ed25519signature_from_base64(RustBuffer input, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SIGNATURE_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_ED25519SIGNATURE_FROM_SLICE
uint64_t uniffi_vodozemac_bindings_fn_constructor_ed25519signature_from_slice(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SIGNATURE_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SIGNATURE_TO_BASE64
RustBuffer uniffi_vodozemac_bindings_fn_method_ed25519signature_to_base64(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SIGNATURE_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_ED25519SIGNATURE_TO_BYTES
RustBuffer uniffi_vodozemac_bindings_fn_method_ed25519signature_to_bytes(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_KEYID
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_KEYID
uint64_t uniffi_vodozemac_bindings_fn_clone_keyid(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_KEYID
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_KEYID
void uniffi_vodozemac_bindings_fn_free_keyid(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_KEYID_FROM_U64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CONSTRUCTOR_KEYID_FROM_U64
uint64_t uniffi_vodozemac_bindings_fn_constructor_keyid_from_u64(uint64_t value, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_KEYID_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_KEYID_TO_BASE64
RustBuffer uniffi_vodozemac_bindings_fn_method_keyid_to_base64(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_SHAREDSECRET
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_CLONE_SHAREDSECRET
uint64_t uniffi_vodozemac_bindings_fn_clone_sharedsecret(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_SHAREDSECRET
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FREE_SHAREDSECRET
void uniffi_vodozemac_bindings_fn_free_sharedsecret(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_SHAREDSECRET_AS_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_SHAREDSECRET_AS_BYTES
RustBuffer uniffi_vodozemac_bindings_fn_method_sharedsecret_as_bytes(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_SHAREDSECRET_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_SHAREDSECRET_TO_BYTES
RustBuffer uniffi_vodozemac_bindings_fn_method_sharedsecret_to_bytes(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_SHAREDSECRET_WAS_CONTRIBUTORY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_METHOD_SHAREDSECRET_WAS_CONTRIBUTORY
int8_t uniffi_vodozemac_bindings_fn_method_sharedsecret_was_contributory(uint64_t ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FUNC_BASE64_DECODE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FUNC_BASE64_DECODE
RustBuffer uniffi_vodozemac_bindings_fn_func_base64_decode(RustBuffer input, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FUNC_BASE64_ENCODE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FUNC_BASE64_ENCODE
RustBuffer uniffi_vodozemac_bindings_fn_func_base64_encode(RustBuffer input, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FUNC_GET_VERSION
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_FN_FUNC_GET_VERSION
RustBuffer uniffi_vodozemac_bindings_fn_func_get_version(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUSTBUFFER_ALLOC
RustBuffer ffi_vodozemac_bindings_rustbuffer_alloc(uint64_t size, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_vodozemac_bindings_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUSTBUFFER_FREE
void ffi_vodozemac_bindings_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUSTBUFFER_RESERVE
RustBuffer ffi_vodozemac_bindings_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_U8
void ffi_vodozemac_bindings_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_U8
void ffi_vodozemac_bindings_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_U8
void ffi_vodozemac_bindings_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_vodozemac_bindings_rust_future_complete_u8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_I8
void ffi_vodozemac_bindings_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_I8
void ffi_vodozemac_bindings_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_I8
void ffi_vodozemac_bindings_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_I8
int8_t ffi_vodozemac_bindings_rust_future_complete_i8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_U16
void ffi_vodozemac_bindings_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_U16
void ffi_vodozemac_bindings_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_U16
void ffi_vodozemac_bindings_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_vodozemac_bindings_rust_future_complete_u16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_I16
void ffi_vodozemac_bindings_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_I16
void ffi_vodozemac_bindings_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_I16
void ffi_vodozemac_bindings_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_I16
int16_t ffi_vodozemac_bindings_rust_future_complete_i16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_U32
void ffi_vodozemac_bindings_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_U32
void ffi_vodozemac_bindings_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_U32
void ffi_vodozemac_bindings_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_vodozemac_bindings_rust_future_complete_u32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_I32
void ffi_vodozemac_bindings_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_I32
void ffi_vodozemac_bindings_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_I32
void ffi_vodozemac_bindings_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_I32
int32_t ffi_vodozemac_bindings_rust_future_complete_i32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_U64
void ffi_vodozemac_bindings_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_U64
void ffi_vodozemac_bindings_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_U64
void ffi_vodozemac_bindings_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_vodozemac_bindings_rust_future_complete_u64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_I64
void ffi_vodozemac_bindings_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_I64
void ffi_vodozemac_bindings_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_I64
void ffi_vodozemac_bindings_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_I64
int64_t ffi_vodozemac_bindings_rust_future_complete_i64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_F32
void ffi_vodozemac_bindings_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_F32
void ffi_vodozemac_bindings_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_F32
void ffi_vodozemac_bindings_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_F32
float ffi_vodozemac_bindings_rust_future_complete_f32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_F64
void ffi_vodozemac_bindings_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_F64
void ffi_vodozemac_bindings_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_F64
void ffi_vodozemac_bindings_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_F64
double ffi_vodozemac_bindings_rust_future_complete_f64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_vodozemac_bindings_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_vodozemac_bindings_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_vodozemac_bindings_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_vodozemac_bindings_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_POLL_VOID
void ffi_vodozemac_bindings_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_CANCEL_VOID
void ffi_vodozemac_bindings_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_FREE_VOID
void ffi_vodozemac_bindings_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_RUST_FUTURE_COMPLETE_VOID
void ffi_vodozemac_bindings_rust_future_complete_void(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_FUNC_BASE64_DECODE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_FUNC_BASE64_DECODE
uint16_t uniffi_vodozemac_bindings_checksum_func_base64_decode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_FUNC_BASE64_ENCODE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_FUNC_BASE64_ENCODE
uint16_t uniffi_vodozemac_bindings_checksum_func_base64_encode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_FUNC_GET_VERSION
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_FUNC_GET_VERSION
uint16_t uniffi_vodozemac_bindings_checksum_func_get_version(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519PUBLICKEY_AS_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519PUBLICKEY_AS_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_method_curve25519publickey_as_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519PUBLICKEY_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519PUBLICKEY_TO_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_method_curve25519publickey_to_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519PUBLICKEY_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519PUBLICKEY_TO_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_method_curve25519publickey_to_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519PUBLICKEY_TO_VEC
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519PUBLICKEY_TO_VEC
uint16_t uniffi_vodozemac_bindings_checksum_method_curve25519publickey_to_vec(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519SECRETKEY_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519SECRETKEY_PUBLIC_KEY
uint16_t uniffi_vodozemac_bindings_checksum_method_curve25519secretkey_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519SECRETKEY_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_CURVE25519SECRETKEY_TO_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_method_curve25519secretkey_to_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519KEYPAIR_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519KEYPAIR_PUBLIC_KEY
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519keypair_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519KEYPAIR_SIGN
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519KEYPAIR_SIGN
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519keypair_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519PUBLICKEY_AS_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519PUBLICKEY_AS_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519publickey_as_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519PUBLICKEY_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519PUBLICKEY_TO_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519publickey_to_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519PUBLICKEY_VERIFY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519PUBLICKEY_VERIFY
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519publickey_verify(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SECRETKEY_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SECRETKEY_PUBLIC_KEY
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519secretkey_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SECRETKEY_SIGN
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SECRETKEY_SIGN
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519secretkey_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SECRETKEY_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SECRETKEY_TO_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519secretkey_to_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SECRETKEY_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SECRETKEY_TO_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519secretkey_to_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SIGNATURE_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SIGNATURE_TO_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519signature_to_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SIGNATURE_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_ED25519SIGNATURE_TO_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_method_ed25519signature_to_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_KEYID_TO_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_KEYID_TO_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_method_keyid_to_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_SHAREDSECRET_AS_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_SHAREDSECRET_AS_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_method_sharedsecret_as_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_SHAREDSECRET_TO_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_SHAREDSECRET_TO_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_method_sharedsecret_to_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_SHAREDSECRET_WAS_CONTRIBUTORY
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_METHOD_SHAREDSECRET_WAS_CONTRIBUTORY
uint16_t uniffi_vodozemac_bindings_checksum_method_sharedsecret_was_contributory(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_constructor_curve25519publickey_from_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_BYTES
uint16_t uniffi_vodozemac_bindings_checksum_constructor_curve25519publickey_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519PUBLICKEY_FROM_SLICE
uint16_t uniffi_vodozemac_bindings_checksum_constructor_curve25519publickey_from_slice(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519SECRETKEY_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519SECRETKEY_FROM_SLICE
uint16_t uniffi_vodozemac_bindings_checksum_constructor_curve25519secretkey_from_slice(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519SECRETKEY_NEW
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_CURVE25519SECRETKEY_NEW
uint16_t uniffi_vodozemac_bindings_checksum_constructor_curve25519secretkey_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519KEYPAIR_NEW
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519KEYPAIR_NEW
uint16_t uniffi_vodozemac_bindings_checksum_constructor_ed25519keypair_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519PUBLICKEY_FROM_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519PUBLICKEY_FROM_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_constructor_ed25519publickey_from_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519PUBLICKEY_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519PUBLICKEY_FROM_SLICE
uint16_t uniffi_vodozemac_bindings_checksum_constructor_ed25519publickey_from_slice(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SECRETKEY_FROM_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SECRETKEY_FROM_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_constructor_ed25519secretkey_from_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SECRETKEY_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SECRETKEY_FROM_SLICE
uint16_t uniffi_vodozemac_bindings_checksum_constructor_ed25519secretkey_from_slice(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SECRETKEY_NEW
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SECRETKEY_NEW
uint16_t uniffi_vodozemac_bindings_checksum_constructor_ed25519secretkey_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SIGNATURE_FROM_BASE64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SIGNATURE_FROM_BASE64
uint16_t uniffi_vodozemac_bindings_checksum_constructor_ed25519signature_from_base64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SIGNATURE_FROM_SLICE
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_ED25519SIGNATURE_FROM_SLICE
uint16_t uniffi_vodozemac_bindings_checksum_constructor_ed25519signature_from_slice(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_KEYID_FROM_U64
#define UNIFFI_FFIDEF_UNIFFI_VODOZEMAC_BINDINGS_CHECKSUM_CONSTRUCTOR_KEYID_FROM_U64
uint16_t uniffi_vodozemac_bindings_checksum_constructor_keyid_from_u64(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_VODOZEMAC_BINDINGS_UNIFFI_CONTRACT_VERSION
uint32_t ffi_vodozemac_bindings_uniffi_contract_version(void
    
);
#endif

